type : Type.

def eta : type -> Type.

ty : type.

def prod : A : type -> (eta A -> type) -> type.

def lam : A : type -> B : (eta A -> type) -> (x:eta A -> eta (B x)) -> eta (prod A B).

def app : A : type -> B : (eta A -> type) -> eta (prod A B) -> x: eta A -> eta (B x).

def sym : A : type -> eta A -> eta A.

def var : A : type -> eta A -> eta A.

[] eta ty --> type.

[A,f] eta (prod A f) --> a:eta A -> eta (f a).

[A,B,f,a] app A B (lam A B f) a --> f a.
